// it is a hybrid logic of common ancestor and root to node path where the root is the common ancestor

public static int distance(Node node,int a,int b)
{
  int x=common(node,a,b);
  Node n=new Node();
  n.data=x;
  ArrayList<Integer> aa=path(n,a);
  ArrayList<Integer> bb=path(n,b);
  return aa.size()+bb.size();
}   

// alternative
public static int distance(Node root,int a,int b)
{
  ArrayList <Integer> p1=path(root,a);
  ArrayList<Integer> p2=path(root,b);
  
  int i,j;
  i=p1.size()-1;
  j=p2.size()-1;
  int x,y;
  while(i>=0 && j>=0 && p1.get(i)==p2.get(j))
  {
    i--;j--;
   }
  i++;
  j++;
  return i+j;
  
  }
    
    
